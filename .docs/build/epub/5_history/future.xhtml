<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Видимое будущее</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="id1">
<h1>Видимое будущее</h1>
<div class="line-block">
<div class="line">Тут на самом деле два направления развития.</div>
<div class="line">Во-первых, совершенно очевидно будут стремительно набирать популярность <strong>программные интерфейсы</strong> взаимодействия с железом и набивший оскомину на конференциях model-driven programmability.</div>
<div class="line">Рано или поздно он сойдёт со слайдов и начнёт свой путь в каждое домохозяйство.</div>
<div class="line">gNMI слишком хорош, чтобы пройти мимо него. Да и NETCONF, настоенный на YANG’е, тоже.</div>
<div class="line">Будем видеть всё больше статей, больше лаб, разборов. Всё больше вендоров будет нормально поддерживать их и увеличивать покрытие.</div>
<div class="line">Такие требования начнут появляться в RFI.</div>
</div>
<p>И это очень-очень-очень хорошо.</p>
<div class="line-block">
<div class="line">Другое направление более интересное и многообещающее.</div>
<div class="line"><strong>Whitebox-оборудование</strong>. Лет 5 назад это было таким же шумом, как сейчас gNMI. Это - где-то там, у них - у больших и сильных - есть и железо, и софт, и штат R&amp;D для этого интересного.</div>
</div>
<div class="line-block">
<div class="line">Сегодня Cumulus, Switchdev, Onos, SONiC - уже вполне зрелые операционные системы, на которых работает прод. Broadcom опубликовал свой SDK на <a class="reference external" href="https://github.com/Broadcom-Network-Switching-Software/OpenBCM">github</a><span class="link-target"> [https://github.com/Broadcom-Network-Switching-Software/OpenBCM]</span> - это вообще из разряда «чё творится-то?!»</div>
<div class="line">Выпуском железа занимаются уже давно не только новоиспечённые игроки, вроде mellanox’а (<a class="reference external" href="https://linkmeup.ru/podcasts/1059/">у нас с ними был подкаст</a><span class="link-target"> [https://linkmeup.ru/podcasts/1059/]</span>), <a class="reference external" href="https://opennetworking.org/wp-content/uploads/2018/12/Stratum-on-Whitebox-Switches.pdf">delta</a><span class="link-target"> [https://opennetworking.org/wp-content/uploads/2018/12/Stratum-on-Whitebox-Switches.pdf]</span> Xpliant, Barefoot (<a class="reference external" href="https://linkmeup.ru/podcasts/1083/">у нас и с ними был подкаст</a><span class="link-target"> [https://linkmeup.ru/podcasts/1083/]</span>), но и вендоры - так называемые Britebox - Branded white box - cisco, huawei итд.</div>
</div>
<div class="line-block">
<div class="line">Почему это важно? И почему эта информация вообще получила место в статье про историю автоматизации?</div>
<div class="line">А всё просто. С появлением Whitebox в мир сетевых операционных систем приходит Linux.</div>
<div class="line">«Да он там и до этого был» - скажут некоторые. Не секрет, что почти все проприетарные сетевые ОС основаны на Linux или FreeBSD. И что с того, если доступа к консоли обычно нет, не говоря уж о руте?</div>
</div>
<div class="line-block">
<div class="line">А на Whitebox’ах стоит самый что ни на есть честный Linux, на который можно установить пакеты из репозитория, притащить любой файл, любой бинарник, любой скрипт.</div>
<div class="line">Он превращается в обычный сервер с о-о-очень модными сетевыми карточками с чипом на 12,8 тера.</div>
<div class="line">На нём есть файлы конфигурации, systemd, cron.</div>
</div>
<p>А это означает, что обслуживать его можно как обычный Linux-сервер.</p>
<p>Можно поднять nginx и совершенно любое REST-приложение за ним. Ну или gRPC-сервер.
Поставить телеграф-агент - и сливать метрики в коллекторы.</p>
<div class="line-block">
<div class="line">И здесь совершенно чудесно ложится идея разделения управления устройством и сервисами, которые на нём запущены.</div>
<div class="line">Есть Linux-тачка. На ней CPU, память, интерфейсы, пользователи, мониторинги системы и всё такое прочее: но весьма ограниченный набор. Доступ - по SSH. Инструмент - любой, используемый для управления физическими машинами - Ansible, Salt, Chef.</div>
</div>
<blockquote>
<div><div class="figure align-center">
<img alt="https://fs.linkmeup.ru/images/adsm/5/switch_decoupled.png" src="https://fs.linkmeup.ru/images/adsm/5/switch_decoupled.png" style="width: 800px;" />
</div>
</div></blockquote>
<p>А есть сервисы - BGP, VPN, VxLAN, который на физической машине запущен. И вот они могут управляться через REST, gRPC, ну или хотя бы путём подсовывания конфигурационных файлов.</p>
<div class="line-block">
<div class="line">И менеджмент конфигурации сети становится задачей других, уже существующих отделов: серверной инфраструктуры и config-плейна. Без размазывания компетенций и накладных расходов.</div>
<div class="line"><strong>Сетевики всё ещё нужны</strong>, очевидно - для определения того, что именно нужно настраивать, как будет выглядеть архитектура сети, набор протоколов, модель данных.</div>
</div>
<p>Сюда же можно подтащить версионирование работающих приложений, в которое можно включить и конфигурацию, запуск двух версий side-by-side и где-то не за горизонтом даже полноценный Continious Integation маячит.</p>
<p>А все заморочки с ансиблом, питон-скриптами, притворяющимися человеком с руками и какой-никакой головой, поддержанием стейта конфигурационной портянки текста - они просто испаряются в предрассветном тумане.</p>
<p>И попробуйте после этого взглянуть на существующую модель работы с сетевым железом - какой кривой и инертной она выглядит.</p>
<div class="line-block">
<div class="line"><strong>Но есть «Но».</strong></div>
<div class="line">Во-первых, это требует глобальной перестройки всех процессов и вообще-то сознания. Такие вещи за 5 лет не происходят в индустрии - мы ещё долго будем развивать NETCONF.</div>
<div class="line">Во-вторых, это требует всё же некий R&amp;D - в штате должны быть крепкие инфраструктурщики и разработчики. В то время как <a class="reference external" href="https://fs.linkmeup.ru/images/adsm/5/lickedhard.jpeg">идеально вылизанное вендорское железо и софт</a><span class="link-target"> [https://fs.linkmeup.ru/images/adsm/5/lickedhard.jpeg]</span> - требуют весьма ограниченное количество человеческих ресурсов на обслуживание.</div>
<div class="line">В-третьих, это всё сейчас и ещё долгое время будет касаться ДатаЦентров со сравнительно простой сетью, построенной преимущественно на свитчах. В гораздо меньшей степени это применимо к энтерпрайзной сети. А уж когда это докатится до операторов нам будут рассказывать наши внуки. При том что NETCONF там тоже плюс-минус состоялся.</div>
</div>
<p>И всё же этот мир прекрасен.</p>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>