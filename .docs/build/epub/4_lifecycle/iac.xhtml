<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>IaC</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="iac">
<h1>IaC</h1>
<p>Если вы не слышали о <strong>IaC - Infrastructure as Code</strong>, у меня для вас плохие новости. Очень плохие.
Ладно, не напрягайтесь, сейчас всё расскажу.</p>
<div class="line-block">
<div class="line">Как было раньше: выдали вам пачку физических машин - на каждой из них вы запустили KVM/VMWare/WTF, подняли на них флот виртуалочек, настроили сеть, выкатили своё приложение. Нужна дев-среда? Давайте всё в той же последовательности теми же руками. И во второй раз может получиться <em>чуть-чуть</em> не то же самое.</div>
<div class="line">Парадигма IaC предполагает, что конфигурация всей инфраструктуры описывается в текстовых файлах. Речь как про физические устройства, так и про виртуальные машины, контейнеры и прочее.</div>
<div class="line">Далее эти текстовые файлы обрабатываются неким инструментарием, который настраивает инфраструктуру на основе этой информации. Это может быть Terraform, Ansible, SaltStack.</div>
<div class="line">Как результат - вы всегда быстро и с минимальным участием человека получаете предсказуемый результат.</div>
</div>
<div class="line-block">
<div class="line">Например, вы декларативно записываете в yml-, txt-, tf-, wtf-файле, что на таких-то хостах нужно установить KVM, Open vSwitch, настроить IP-адреса и туннели. Далее поднять набор ВМ с убунтой, выдать им адреса, на них установить nginx, загрузить ваш сайт в указанный каталог и настроить nginx. И поставить всё это дело за свежезапущенный балансер.</div>
<div class="line">И получить всё это становится возможным всего одним запуском terrform, если желаемое состояние описано в конфигурационном файле.</div>
<div class="line">Данные в самом файле могут быть в форматах yml, json, это может быть набор объектов вашего любимого ЯП или что угодно иное, что может быть принято инструментом.</div>
<div class="line">Строго говоря, даже если вы в bash-скрипт напихаете весь набор операций - это уже будет IaC. Просто пользоваться этим не очень удобно.</div>
</div>
<div class="line-block">
<div class="line">На схеме ниже изображена упрощённая процедура того, как изменения появляются на сети в парадигме IaC.</div>
</div>
<blockquote>
<div><div class="figure align-center">
<img alt="https://dteslya.engineer/images/2020-10-netdevops-pipeline.png" src="https://dteslya.engineer/images/2020-10-netdevops-pipeline.png" style="width: 900px;" />
</div>
</div></blockquote>
<p><em>https://dteslya.engineer/network_automaiton_101/</em></p>
<div class="line-block">
<div class="line">То есть настройка инфраструктуры выглядит аналогично релизу новой версии приложения в DevOps - те же гиты, апрувы, CI/CD и прочая.</div>
</div>
<div class="line-block">
<div class="line">Что же до сетей?</div>
<div class="line">Прежде в хорошей ситуации у нас для них был HLD (High Level Design), который руками превращался в LLD (Low Level Design) для каждой железки, готовился конфиг (скорее всего, руками) и заливался на железо (надо полагать, тоже руками). В плохой - инженер сразу на железке настраивал сервисы так, как ему казалось правильным.</div>
</div>
<div class="line-block">
<div class="line">Систему автоматизации сети мы будем рассматривать также в разрезе IaC. Давайте уже прекратим строить из себя особенных, потому лишь что у наших хостов проприетарная ОС. Сеть - такая же часть инфраструктуры, как физические машины, виртуалки, контейнеры. Ну да, прихлопнуть свитч с нерабочим чипом и пересоздать новый нельзя - но это просто добавляет красок в нашу работу.</div>
</div>
<blockquote>
<div><div class="figure align-center">
<img alt="https://fs.linkmeup.ru/images/adsm/4/its_different.jpg" src="https://fs.linkmeup.ru/images/adsm/4/its_different.jpg" style="width: 450px;" />
</div>
</div></blockquote>
<div class="line-block">
<div class="line">Обновление конфигурации на сети и обновление прочей инфраструктуры после этого - тот же процесс деплоя.</div>
</div>
<div class="line-block">
<div class="line">В общем это именно то, о чём мы тут толкуем с самого 0-го выпуска. Дизайн описан в формализованном HLD, а конкретные данные берутся из нашего SoT - Netbox. Из них генерится конфигурация и складывается в репозиторий, где прогоняются авто-тесты (в аппаратной или виртуальной лабе или что-то а-ля Batfish), кто-то смотрит глазами и подтверждает изменения, далее они по всем правилам CD выезжают в прод.</div>
</div>
<p>IaC - и ничегошеньки не настраиваем руками.</p>
<blockquote>
<div><div class="figure align-center">
<img alt="https://fs.linkmeup.ru/images/adsm/4/tobusy.png" src="https://fs.linkmeup.ru/images/adsm/4/tobusy.png" style="width: 500px;" />
</div>
</div></blockquote>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>