<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Инструменты виртуализации - libvirt, virsh и прочее</title>
    <link rel="stylesheet" type="text/css" href="../../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="libvirt-virsh">
<h1>Инструменты виртуализации - libvirt, virsh и прочее</h1>
<p>В предыдущих главах мы рассматривали теоретические основы виртуализации, в этой главе мы поговорим об инструментах, которые доступны пользователю непосредственно для запуска и изменения виртуальных машин на KVM-гипервизоре.
Остановимся на трех основных компонентах, которые покрывают 90 процентов всевозможных операций с виртуальными машинами:</p>
<ul>
<li><p>libvirt</p></li>
<li><p>virsh CLI</p></li>
<li><p>virt-install</p>
<blockquote>
<div><p>Конечно, существует множество других утилит и CLI-команд, которые позволяют управлять гипервизором, например, можно напрямую пользоваться командами qemu_system_x86_64 или графическим интерфейсом virt manager, но это скорее исключение. К тому же существующие сегодня Cloud-платформы, Openstack, например, используют как раз libvirt.</p>
</div></blockquote>
</li>
</ul>
<div class="section" id="libvirt">
<h2>libvirt</h2>
<p>libvirt - это масштабный open-source проект, который занимается разработкой набора инструментов и драйверов для управления гипервизорами. Он поддерживает не только QEMU/KVM, но и ESXi, LXC и много чего еще.
Основная причина его популярности - структурированный и понятный интерфейс взаимодействия через набор XML-файлов плюс возможность автоматизации через API. Стоит оговориться что libvirt не описывает все возможные функции гипервизора, он лишь предоставляет удобный интерфейс использования <strong>полезных</strong>, с точки зрения участников проекта, функции гипервизора.</p>
<p>И да, libvirt это де-факто стандарт в мире виртуализации сегодня. Только <a class="reference external" href="https://libvirt.org/apps.html">взгляните на список приложений</a><span class="link-target"> [https://libvirt.org/apps.html]</span>, которые используют libvirt.</p>
<blockquote>
<div><div class="figure align-center">
<img alt="https://fs.linkmeup.ru//images/adsm/2/libvirt_support.png" src="https://fs.linkmeup.ru//images/adsm/2/libvirt_support.png" style="width: 800px;" />
</div>
</div></blockquote>
<p>Хорошая новость про libvirt - все нужные пакеты уже предустановлены во всех наиболее часто используемых Host OS - Ubuntu, CentOS и RHEL, поэтому, скорее всего, собирать руками нужные пакеты и компилировать libvirt вам не придется. В худшем случае придется воспользоваться соответствующим пакетным инсталлятором (apt, yum и им подобные).</p>
<p>При первоначальной установке и запуске libvirt по умолчанию создает Linux bridge virbr0 и его минимальную конфигурацию.</p>
<blockquote>
<div><p>Именно поэтому при установке Ubuntu Server, например, вы увидите в выводе команды ifconfig Linux bridge virbr0 - это результат запуска демона libvirtd</p>
</div></blockquote>
<p>Этот Linux bridge не будет подключен ни к одному физическому интерфейсу, однако, может быть использован для связи виртуальных машин внутри одного гипервизора. Libvirt безусловно может быть использован вместе с OVS, однако, для этого пользователь должен самостоятельно создать OVS bridges с помощью соответствующих OVS-команд.</p>
<p>Любой виртуальный ресурс, необходимый для создания виртуальной машины (compute, network, storage) представлен в виде объекта в libvirt. За процесс описания и создания этих объектов отвечает набор различных XML-файлов.</p>
<p>Детально описывать процесс создания виртуальных сетей и виртуальных хранилищ не имеет особого смысла, так как эта прикладная задача хорошо описана в документации libvirt:</p>
<ul class="simple">
<li><p><a class="reference external" href="https://wiki.libvirt.org/page/VirtualNetworking">Networking</a><span class="link-target"> [https://wiki.libvirt.org/page/VirtualNetworking]</span></p></li>
<li><p><a class="reference external" href="https://libvirt.org/storage.html">Storage</a><span class="link-target"> [https://libvirt.org/storage.html]</span></p></li>
</ul>
<p>Сама виртуальная машина со всеми подключенными PCI-устройствами в терминологии libvirt называется domain. Это тоже <a class="reference external" href="https://libvirt.org/formatdomain.html">объект внутри libvirt</a><span class="link-target"> [https://libvirt.org/formatdomain.html]</span>, который описывается отдельным XML-файлом.</p>
<p>Этот XML-файл и является, строго говоря, виртуальной машиной со всеми виртуальными ресурсами - оперативная память, процессор, сетевые устройства, диски и прочее. Часто данный XML-файл называют libvirt XML или dump XML.
Вряд ли найдется человек, который понимает все параметры libvirt XML, однако, это и не требуется, когда есть документация.</p>
<p>В общем случае, libvirt XML для Ubuntu Desktop Guest OS будет довольно прост - 40-50 строчек. Поскольку вся оптимизация производительности описывается также в libvirt XML (NUMA-топология, CPU-топологии, CPU pinning и прочее), для сетевых функций libvirt XML может быть очень сложен и содержать несколько сот строк. Любой производитель сетевых устройств, который поставляет свое ПО в виде виртуальных машин, имеет рекомендованные примеры libvirt XML.</p>
</div>
<div class="section" id="virsh-cli">
<h2>virsh CLI</h2>
<p>Утилита virsh - «родная» командная строка для управления libvirt. Основное ее предназначение - это управление объектами libvirt, описанными в виде XML-файлов. Типичными примерами являются операции start, stop, define, destroy и так далее. То есть жизненный цикл объектов - life-cycle management.</p>
<p>Описание всех команд и флагов virsh также доступно в документации <a class="reference external" href="https://libvirt.org/sources/virshcmdref/html-single/">libvirt</a><span class="link-target"> [https://libvirt.org/sources/virshcmdref/html-single/]</span>.</p>
</div>
<div class="section" id="virt-install">
<h2>virt-install</h2>
<p>Еще одна утилита, которая используется для взаимодействия с libvirt. Одно из основных преимуществ - можно не разбираться с XML-форматом, а обойтись лишь флагами, доступными в virsh-install. Второй важный момент - море примеров и информации в Сети.</p>
<p>Таким образом какой бы утилитой вы ни пользовались, управлять гипервизором в конечном счете будет именно libvirt, поэтому важно понимать архитектуру и принципы его работы.</p>
</div>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>