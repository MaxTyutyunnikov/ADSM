.. meta::
   :http-equiv=Content-Type: text/html; charset=utf-8

Заключение
==========

Это весьма поверхностное описание работы виртуальной сети с оверлеем с хоста и SDN-контроллером. Но какую бы платформу виртуализации вы сегодня ни взяли, работать она будет похожим образом, будь то VMWare, ACI, OpenStack, CloudStack, Tungsten Fabric или Juniper Contrail. Они будут отличаться видами инкапсуляций и заголовков, протоколами доставки информации на конечные сетевые устройства, но принцип программно настраиваемой оверлейной сети, работающей поверх сравнительно простой и статичной андерлейной сети останется прежним.
Можно сказать, что  области создания приватного облака на сегодняшний день SDN на основе оверлейной сети победил. Впрочем это не значит, что Openflow нет места в современном мире - он используется в OpenStacke и в той же VMWare NSX, его, насколько мне известно, использует Google для настройки андерлейной сети.

 Чуть ниже я привёл ссылки на более подробные материалы, если хочется изучить вопрос глубже. 

А что там наш Underlay? 
А в общем-то ничего. Он всю дорогу не менялся. Всё, что ему нужно делать в случае оверлея с хоста - это обновлять маршруты и ARP'ы по мере появления и исчезновения vRouter/VNGW и таскать пакеты между ними.

Давайте сформулируем список требований к Underlay-сети.

#. Уметь в какой-то протокол маршрутизации, в нашей ситуации - BGP.
#. Иметь широкую полосу, желательно без переподписки, чтобы не терялись пакеты из-за перегрузок.
#. Поддерживать ECMP - неотъемлемая часть фабрики.
#. Уметь обеспечить QoS, в том числе хитрые штуки, вроде ECN.
#. Поддерживать NETCONF - задел на будущее.


Работе самой Underlay-сети я посвятил здесь совсем мало времени. Это потому, что далее в серии я именно на ней и сосредоточусь, а Overlay мы будем затрагивать только вскользь.

Очевидно, я сильно ограничиваю нас всех, используя в качестве примера сеть ДЦ, построенную на фабрике Клоза с чистой IP-маршрутизацией и оверлеем с хоста.
Однако я уверен, что любую сеть, имеющую дизайн, можно описать в формальных терминах и автоматизировать. Просто я здесь преследую целью разобраться в подходах к автоматизации, а не запутать всех вообще, решая задачу в общем виде.

В рамках АДСМ мы с Романом Горге планируем опубликовать отдельный выпуск про виртуализацию вычислительных мощностей и её взаимодействие с виртуализацией сети. Оставайтесь на связи.

Полезные ссылки
---------------

* `Tungsten Fabric Archvitecture <https://tungstenfabric.github.io/website/>`_.
* `6 часов про Яндекс.Облако, где в том числе затрагивается виртуальная сеть на TF <https://youtu.be/Kr6WIYPts8I?t=3157>`_.
* `What Is Open vSwitch? <https://docs.openvswitch.org/en/latest/intro/what-is-ovs/>`_
* `Введение в VxLAN <https://habr.com/ru/post/344326/>`_.
* `RFC 7348. Virtual eXtensible Local Area Network (VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks over Layer 3 Networks <https://tools.ietf.org/html/rfc7348>`_.
* `Scaleway approach to VXLAN EVPN Fabric <https://www.enog.org/wp-content/uploads/presentations/enog-16/18-Scaleway-P14-fabric-ENOG16.pdf>`_. Тут рассказывается про всю сеть ДЦ, включая Underlay, Overlay, подходы к мульти-хоумингу и управлению.


Спасибы
-------

* `Роману Горге <https://www.linkedin.com/in/roman-gorge-2b15896b/?originalSubdomain=se>`_ - бывшему ведущему подкаста linkmeup, а ныне эксперту в области облачных платформ. За комментарии и правки. Ну и ждём в скором будущем его более глубокой статьи о виртуализации.
* `Александру Шалимову <https://www.alexander-shalimov.com>`_ - моему коллеге и эксперту в области разработки виртуальных сетей. За комментарии и правки.
* `Валентину Синицыну <https://www.linkedin.com/in/valentine-sinitsyn-b8b3a23a/>`_- моему коллеге и эксперту в области Tungsten Fabric . За комментарии и правки.
* `Артёму Чернобаю <http://illustrators.ru/users/rabbits_manufactory>`_ - иллюстратору linkmeup. За КДПВ.
* Александру Лимонову. За мем "automato".
