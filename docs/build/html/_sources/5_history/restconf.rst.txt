RESTCONF
========

*Буйные 10-е и забыли*

    .. code-block:: bash

       The workshop recommends, with strong consensus from the operators
       and rough consensus from the protocol developers, that the
       IETF/IRTF should not spend resources on developing HTML-based or
       HTTP-based methods for configuration management.

`RFC3535. Recommendation 6 <https://datatracker.ietf.org/doc/html/rfc3535#section-6>`_.

| SSH - это хорошо. Но на сетевую автоматизацию случился спрос, а за ним наплыв сил разработчиков. А вот эти разработчики хорошо шарят в REST, но на курле крутили все эти наши SSH и парсинг текста.
| В компаниях, где начинают заниматься автоматизацией сети, обычно уже есть свой штат разработчиков, инструменты, практики. И они в лучшем случае рассматривают сеть, как ещё одни сервера, а то и ещё один сервис.
| И вот REST API с CRUD им очень знаком.
| Вот и решили парни из циски, джунипера и tail-f: *"а почему бы не запилить REST API в сетевые коробки?"*. Ну пошли и запилили - делов-то. И назвали RESTCONF - всё ещё отзываются боли SNMP.

`Драфт был опубликован в 2014м <https://tools.ietf.org/id/draft-bierman-netconf-restconf-04.html>`_, а в 2017 мир увидел `RFC8040 <https://www.ietf.org/rfc/rfc8040.txt>`_.

| Это помесь RESTAPI и NETCONF, которая была призвана упростить управление сетью для WEB-приложений.
| Внутри идеологически это NETCONF с его datastores и способами работать с конфигурацией, однако в качестве транспорта - HTTP с набором операций CRUD, реализованных через стандартные методы (*GET*, *POST*, *PUT*, *PATCH*, *DELETE*).

| Конфигурационные данные передаются в формате JSON или XML.
| В качестве модели данных используется только те, что написаны на языке YANG - тут уже никакой самодеятельности. 

| С самого начала RESTCONF не затевался как замена NETCONF, а только как более удобный для WEB-приложений способ работать с сетевыми устройствами. То есть они должны сожительствовать.
| При этом обычно на устройстве реализуется один бэкенд, обрабатывающий запросы на работу с конфигурацией и опер.данными от разных фронтов - NETCONF или RESTCONF. То есть в основе одни и те же datastores, один и тот же движок, вычисляющий конфигурационные дельты, но сложность транзакционности и нескольких разных видов конфигураций (`running`, `candidate`, `saved`) от пользователя скрыта в случае NETCONF.

С другой стороны отсутствие в выдаче поисковиков хоть сколько-то серьёзных работ по автоматизации с помощью RESTCONF и даже популистских статей от больших игроков говорит о том, что это всё не более чем баловство. И я намеренно не пишу слово "пока". Лично я в него не верю.

При этом CRUD не очень гладко ложится на RPC-подход, да и в идее держать открытым на сетевом железе HTTP есть что-то противоестественное, согласитесь? Нет? Ну ладно.

Просто жаль сил, вложенных в этот протокол. Потому что на пятки ему наступает gRPC/gNMI.