<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NETCONF</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="netconf">
<h1>NETCONF</h1>
<p><em>Сытые 0-е и по ныне</em></p>
<p>Если вам по какой-то причине кажется, что стандарты рождаются где-то в недрах институтов, оторванных от жизни, то послушайте вот эту историю. Скорбно при этом помним про ISO.</p>
<p>В 1996 выходец из Ксерокса Прадип Синдху и Скот Кринс из StrataCom, купленной Циской, основали Juniper Networks. Идея создания мощного пакетного маршрутизатора пришла в голову Синдху, и он стал CTO компании, а второго наняли на роль CEO.</p>
<blockquote>
<div><div class="figure align-center">
<img alt="https://fs.linkmeup.ru/images/adsm/5/juniper-m40.jpeg" src="https://fs.linkmeup.ru/images/adsm/5/juniper-m40.jpeg" style="width: 500px;" />
</div>
<p>Juniper M40. <a class="reference external" href="https://tofactorydefault.files.wordpress.com/2013/12/juniper-m40.jpg">Источник</a><span class="link-target"> [https://tofactorydefault.files.wordpress.com/2013/12/juniper-m40.jpg]</span></p>
</div></blockquote>
<div class="line-block">
<div class="line">Вместе они создали легендарный М40 и лучший в мире интерфейс командной строки. До сих пор никто не сделал ничего лучшего - все только повторяют.</div>
<div class="line">Операционка, предоставляющая клиенту обычный текстовый интерфейс, на самом деле перекладывает команды в XML, который используется для управления оборудованием.</div>
</div>
<p>Так вот, их CLI и способ взаимодействия его с системой оказался настолько естественным и удачным, что его и положили в основу стандарта NETCONF в 2006-м году. Не без участия Juniper Networks, конечно же, появился <a class="reference external" href="https://www.ietf.org/rfc/rfc4741.txt">RFC4741</a><span class="link-target"> [https://www.ietf.org/rfc/rfc4741.txt]</span>. Будем честны, один только джунипер там и постарался в практической части. И то тут, то там будут проскакивать его куски, начиная с set и заканчивая candidate config.</p>
<p>Вот как он был определён в нулевых:</p>
<blockquote>
<div><div class="highlight-text notranslate"><div class="highlight"><pre><span></span>Abstract
The Network Configuration Protocol (NETCONF) defined in this document
provides mechanisms to install, manipulate, and delete the
configuration of network devices.  It uses an Extensible Markup
Language (XML)-based data encoding for the configuration data as well
as the protocol messages.  The NETCONF protocol operations are
realized on top of a simple Remote Procedure Call (RPC) layer.
</pre></div>
</div>
</div></blockquote>
<p>И определение с тех пор не менялось - вся суть NETCONF в этом параграфе.</p>
<p>Но как так получилось, с чего началось? Да с того, что в начале 2000-х IAB проснулся в одно недоброе утро и осознал, что все планы по CMIP мир провалил, SNMP прорастил свои корни глубоко и перестал быть Simple, никто из вендоров так и не реализовал на 100% его поддержку, в самой аббревиатуре SNMP «M» вместо <em>«Management»</em> стала обозначать <em>«Monitoring»</em>, и к тому же единой модели данных конфигурации не получилось. Хуже того - появился этот выскочка Juniper, который везде суёт свой нос.</p>
<p>В общем умники из IAB крепко призадумались. И собрались снова - на этот раз в офлайне 4-го июня 2002-го года в Рестоне (это в Штатах - любопытный городок - почитайте), чтобы <em>«продолжить важный диалог, начатый между операторами и протокол-девелоперами»</em>.</p>
<p>Сели, похаяли SNMP, покекали с аббревиатур COPS, SPPI, PIB, CIM, MOF и записали это всё в –тик-ток– <a class="reference external" href="https://datatracker.ietf.org/doc/html/rfc3535">RFC3535</a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc3535]</span>.</p>
<p>Выхлопом этой встречи стали 33 наблюдения и 8 рекомендаций. Среди них есть действительно важные, определившие наше настоящее.</p>
<blockquote>
<div><div class="highlight-text notranslate"><div class="highlight"><pre><span></span>1. Программные интерфейсы должны предоставлять полное покрытие,
иначе они не будут использоваться операторами, поскольку они
будут вынуждены использовать CLI.
5. Необходимо строгое разделение между конфигурационными и операционными
данными
8. Необходимо иметь возможность выгрузить и загрузить конфигурацию
в текстовом формате в единообразной манере между всеми вендорами
и типами устройства
9. Желательно иметь механизм доставки конфигурации в условиях
транзакционных ограничений.
14. Необходимо, чтобы устройства поддерживали как программный,
так и пользовательский интерфейс
15. Внутренние операции на устройстве должны быть одинаковы
как для программного, так и для пользовательского интерфейсов.
26. Должна быть возможность произвести операцию над указанной секцией
конфигурации.
27. Должна быть возможность выяснить возможности устройства
28. Необходимы безопасный транспорт, механизмы аутентификации
и авторизации, поддерживаемые текущей инфраструктурой.
30. Полная конфигурация устройства должна быть применима через один
протокол.
</pre></div>
</div>
</div></blockquote>
<p>Часть из них мы воспринимаем сегодня как самоочевидное, мол, а как вы ещё иначе могли бы такое сделать? Но это не воспринималось так тогда. Просто вспомним как устроен SNMP :)</p>
<p>А ещё были явно полезные рекомендации:</p>
<ul class="simple">
<li><p>Рабочее совещание рекомендует прекратить форсить рабочие группы предоставлять конфигурационные MIB’ы</p></li>
<li><p>Рабочее совещание рекомендует не тратить время на CIM, COPS-PR, SPPI PIB</p></li>
</ul>
<p>В общем-то какие претензии к SNMP и его компании заставили уважаемых людей собраться на три дня?</p>
<ul class="simple">
<li><p>Проблемы масштабирования. Забирать большие объёмы данных с большого количества устройств он не был рассчитан.</p></li>
<li><p>Транзакционность изменений на устройстве, и тем более на сети, должна была поддерживаться не протоколом и устройством, а системой инструментов.</p></li>
<li><p>Откат также лежал на инструментах.</p></li>
<li><p>Writable MIB не покрывали большей части задач по настройке устройства.</p></li>
<li><p>Весь этот куст OID’ов был крайне сложночитаем для человека. Понять, что произойдёт после работы скрипта было очень сложно. <em>Сколькие из вас отчаялись, пытаясь его понять?</em></p></li>
<li><p>Не было никакого инструмента, который позволял бы повторно выполнить те же действия идемпотентно на этом же устройстве или на другом.</p></li>
<li><p>Контроль состояния тоже отсутствовал.</p></li>
</ul>
<div class="line-block">
<div class="line">В итоге протокол, призванный решать вопрос автоматизации, не особо-то для этого подходил.</div>
<div class="line">Короткий итог встречи: IETF всё это время что-то там придумывал, разрабатывал, чтобы сделать жизнь операторов проще, а те не будь дураками, пришли и наконец сказали, что, мол, вы тут штаны просиживаете, а ничего полезного для нас не делаете, а делаете вы бесполезное! И ISO туда же!</div>
</div>
<div class="line-block">
<div class="line">И в этот момент Juniper из-за угла приоткрывает полу своего XML-API.</div>
<div class="line">И он оказывается настолько более лаконичным (это XML-то!) и удобным, что рабочая группа внезапно решает принять его концепции в качестве стандарта <strong>NET</strong>work <strong>CONF</strong>iguration protocol - <a class="reference external" href="https://www.ietf.org/rfc/rfc4741.txt">RFC4741</a><span class="link-target"> [https://www.ietf.org/rfc/rfc4741.txt]</span>. Упор на Configuration в названии - это, видимо, гиперкомпенсация отсутствия режима конфигурации в SNMP.</div>
</div>
<p>Вот так в итоге скромно упомянут джунипер в этом RFC:</p>
<blockquote>
<div><div class="highlight-text notranslate"><div class="highlight"><pre><span></span>In the late 1990&#39;s, some vendors started to use the Extensible Markup
Language (XML) [XML] for describing device configurations and for
protocols that can be used to retrieve and manipulate XML formatted
configurations.
</pre></div>
</div>
</div></blockquote>
<p>А через 5 лет, в  2011, исправленное и дополненное издание вышло под номером <a class="reference external" href="https://www.ietf.org/rfc/rfc6241.txt">RFC6241</a><span class="link-target"> [https://www.ietf.org/rfc/rfc6241.txt]</span>. Там уже потрудились несколько университетов и компаний. Одной из них стала восходящая звезда сетевой автоматизации Tail-f, купленная и погубленная в 2014-м году циской. Нет, формально она, конечно, осталась внутри как отдельный Business Unit, но в большой мир они отсвечиваюь теперь только Cisco NSO, хотя могли бы приносить большую пользу. Впрочем, может, я зря наговариваю? Надо будет потрогать его.</p>
<p>И вот в операторские сети на белом коне въезжает NETCONF.</p>
<ul class="simple">
<li><p>Работает по SSH (и не только),</p></li>
<li><p>Представляет данные в структурированном виде,</p></li>
<li><p>Разделяет конфигурационные и операционные данные,</p></li>
<li><p>Имеет несколько операций над данными: create, merge, replace, delete, remove,</p></li>
<li><p>Может обеспечить контроль целевого состояния конфигурации,</p></li>
<li><p>Поддерживает концепцию нескольких версий конфигурации (datastores),</p></li>
<li><p>Может поддерживать commit конфигурации. Обеспечивает транзакционность,</p></li>
<li><p>И вообще красавчик.</p></li>
</ul>
<div class="line-block">
<div class="line">Причём Juniper его поддерживает с нулевого дня. И в полной мере, потому что для него это максимально естественно - это и есть его API.</div>
<div class="line">А вот внутренний API той же Циски или Хуавэя не ложится так гладко на XML и какую-либо простую схему. Для них поддержка NETCONF - это большая работа, которую они выполняют с переменным успехом. Коммиты, операция <em>replace</em> - это всё даётся тяжело. А именно в них вся сила.</div>
</div>
<div class="line-block">
<div class="line"><strong>Datastores</strong> - это различные версии конфигурации на устройстве: <code class="docutils literal notranslate"><span class="pre">running</span></code>, <code class="docutils literal notranslate"><span class="pre">candidate</span></code>, <code class="docutils literal notranslate"><span class="pre">saved</span></code> и, возможно, другие. Они позволяют не менять на лету работающую конфигурацию.</div>
<div class="line"><strong>Commit</strong> обеспечивает три буквы <strong>ACID</strong> - <em>Атомарность</em>, <em>Консистентность</em> и <em>Изолированность</em>.</div>
<div class="line"><strong>Операция Replace</strong> - мощнейшая штука - позволяет заменять всю или часть конфигурации на новую.</div>
<div class="line">Мы привыкли, что в CLI нам нужно сформировать список команд, добавляющих новую конфигурацию, и команд - удаляющих старую - ненужную. Довольно простая операция для человека, но чудовищно сложная для автоматики. Мы настолько привыкли, что это даже не вызывает раздражения у нас.</div>
<div class="line">А с NETCONF replace - мы просто суём ту конфигурацию, которую хотели бы видеть, а коробка сама считает, что нужно сделать, чтобы к ней прийти из текущего состояния. Это и есть тот самый декларативный путь, к которому мы так стремимся.</div>
</div>
<div class="line-block">
<div class="line">Для работы с NETCONF есть библиотеки для питона (и синхронные, и асинхронные), для го, плагины для Ансибл.</div>
<div class="line">Вроде бы всё - бери и пользуйся. Но не все производители его поддерживают. И совсем немногие поддерживают его в полной мере. Где-то нельзя настроить DHCP-Relay, где-то нет секций IPv6-vpn AF в BGP, где-то <code class="docutils literal notranslate"><span class="pre">replace</span></code> не поддерживается или поддерживается, но работает через delete/create - ух, неспасибо за это.</div>
<div class="line">В итоге пара пунктов из вышеупомянутого <a class="reference external" href="https://datatracker.ietf.org/doc/html/rfc3535">RFC3535</a><span class="link-target"> [https://datatracker.ietf.org/doc/html/rfc3535]</span> нарушены: не всё можно настроить через этот новый протокол, а для настройки всех возможных функций нужен как минимум CLI.</div>
</div>
<p>Но своё место NETCONF уже прочно занял и будет дальше только расширять и углублять. Несколько вендоров действительно его поддерживают в полной мере. А на других точечные операции всё равно многократно удобнее через программный интерфейс со структурированными данными выполнять. Плюс своё давление оказывают крупные заказчики, требующие его поддержки.</p>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>