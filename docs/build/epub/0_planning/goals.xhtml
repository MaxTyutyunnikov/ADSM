<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Цели</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="id1">
<h1>Цели</h1>
<p>Сейчас мы поставим максимально абстрактные цели:</p>
<ul class="simple">
<li><p>Сеть - как единый организм</p></li>
<li><p>Тестирование конфигурации</p></li>
<li><p>Версионирование состояния сети</p></li>
<li><p>Мониторинг и самовосстановление сервисов</p></li>
</ul>
<p>Позже в этой статье разберём какие будем использовать средства, а в следующих и цели и средства в подробностях.</p>
<div class="section" id="id2">
<h2>Сеть - как единый организм</h2>
<div class="line-block">
<div class="line">Определяющая фраза цикла, хотя на первый взгляд она может показаться не такой уж значительной: <strong>мы будем настраивать сеть, а не отдельные устройства</strong>.</div>
<div class="line">Все последние годы мы наблюдаем сдвиг акцентов к тому, чтобы обращаться с сетью, как с единой сущностью, отсюда и приходящие в нашу жизнь <em>Software Defined Networking</em>, <em>Intent Driven Networks</em> и <em>Autonomous Networks</em>.</div>
<div class="line">Ведь что глобально нужно приложениям от сети: связности между точками А и Б (ну иногда +В-Я) и изоляции от других приложений и пользователей.</div>
</div>
<div class="figure align-center">
<img alt="https://fs.linkmeup.ru/images/adsm/0/seteviki-ne-nuzhny.jpg" src="https://fs.linkmeup.ru/images/adsm/0/seteviki-ne-nuzhny.jpg" style="width: 800px;" />
</div>
<div class="line-block">
<div class="line">И таким образом, наша задача в этой серии - <strong>выстроить систему</strong>,  поддерживающую актуальную конфигурацию <strong>всей сети</strong>, которая уже декомпозируется на актуальную конфигурацию на каждом устройстве в соответствии с его ролью и местоположением.</div>
<div class="line"><strong>Система</strong> управления сетью подразумевает, что для внесения изменений мы обращаемся в неё, а она уже в свою очередь вычисляет нужное состояние для каждого устройства и настраивает его.</div>
<div class="line">Таким образом мы минимизируем почти до нуля хождение в CLI руками - любые изменения в настройках устройств или дизайне сети должны быть формализованы и документированы - и только потом выкатываться на нужные элементы сети.</div>
</div>
<blockquote>
<div><p>То есть, например, если мы решили, что с этого момента стоечные коммутаторы в Казани должны анонсировать две сети вместо одной, мы</p>
<ol class="arabic simple">
<li><p>Сначала документируем изменения в системах</p></li>
<li><p>Генерируем целевую конфигурацию всех устройств сети</p></li>
<li><p>Запускаем программу обновления конфигурации сети, которая вычисляет, что нужно удалить на каждом узле, что добавить, и приводит узлы к нужному состоянию.</p></li>
</ol>
<p>При этом руками мы вносим изменения только на первом шаге.</p>
</div></blockquote>
</div>
<div class="section" id="id3">
<h2>Тестирование конфигурации</h2>
<div class="line-block">
<div class="line"><a class="reference external" href="http://www.wikisummaries.org/wiki/Visible_Ops">Известно</a><span class="link-target"> [http://www.wikisummaries.org/wiki/Visible_Ops]</span>, что 80% проблем случаются во время изменения конфигурации - косвенное тому свидетельство - то, что в период новогодних каникул обычно всё спокойно.</div>
<div class="line">Я лично был свидетелем десятков глобальных даунтаймов из-за ошибки человека: неправильная команда, не в той ветке конфигурации выполнили, забыли комьюнити, снесли MPLS глобально на маршрутизаторе, настроили пять железок, а на шестой ошибку не заметили, закоммитили старые изменения, сделанные другим человеком. Сценариев тьма тьмущая.</div>
</div>
<p>Автоматика нам позволит совершать меньше ошибок, но в большем масштабе. Так можно окирпичить не одно устройство, а всю сеть разом.</p>
<div class="line-block">
<div class="line">Испокон веков наши деды проверяли правильность вносимых изменений острым глазом, стальными яйцами и работоспособностью сети после их выкатки.</div>
<div class="line">Те деды, чьи работы приводили к простою и катастрофическим убыткам, оставляли меньше потомства и должны со временем вымереть, но эволюция процесс медленный, и поэтому до сих пор не все предварительно проверяют изменения в лаборатории.</div>
<div class="line">Однако на острие прогресса те, кто автоматизировал процесс тестирования конфигурации, и дальнейшего её применения на сеть. Иными словами - позаимствовал процедуру CI/CD <a class="reference external" href="https://img.devrant.com/devrant/rant/r_1535091_ErSUL.jpg">Continuous Integration, Continuous Deployment</a><span class="link-target"> [https://img.devrant.com/devrant/rant/r_1535091_ErSUL.jpg]</span>.</div>
</div>
<p>В одной из частей мы рассмотрим как реализовать это с помощью системы контроля версий, вероятно, гитхаба.</p>
<blockquote>
<div><p>Как только вы свыкнитесь с мыслью о сетевом CI/CD, в одночасье метод проверки конфигурации путём её применения на рабочую сеть покажется вам раннесредневековым невежеством. Примерно как стучать молотком по боеголовке.</p>
</div></blockquote>
<p>Органическим продолжением идей о <strong>системе</strong> управления сетью и CI/CD становится полноценное версионирование конфигурации.</p>
</div>
<div class="section" id="id5">
<h2>Версионирование</h2>
<div class="line-block">
<div class="line">Мы будем считать, что при любых изменениях, даже самых незначительных, даже на одном незаметном устройстве, вся сеть переходит из одного состояния в другое.</div>
<div class="line">И мы всегда не выполняем команду на устройстве, мы меняем состояние сети.</div>
</div>
<p>Вот давайте эти состояния и будем называть версиями?</p>
<div class="line-block">
<div class="line">Допустим, текущая версия - 1.0.0.</div>
<div class="line">Поменялся IP-адрес Loopback-интерфейса на одном из ToR’ов? Это минорная версия - получит номер 1.0.1.</div>
<div class="line">Пересмотрели политики импорта маршрутов в BGP - чуть посерьёзнее - уже 1.1.0</div>
<div class="line">Решили избавиться от IGP и перейти только на BGP - это уже радикальное изменение дизайна - 2.0.0.</div>
</div>
<p>При этом разные ДЦ могут иметь разные версии - сеть развивается, ставится новое оборудование, где-то добавляются новые уровни спайнов, где-то - нет, итд.</p>
<p>Про <a class="reference external" href="https://semver.org">семантическое версионирование</a><span class="link-target"> [https://semver.org]</span> мы поговорим в отдельной статье.</p>
<p>Повторюсь - любое изменение (кроме отладочных команд) - это обновление версии. О любых отклонениях от актуальной версии должны оповещаться администраторы.</p>
<p>То же самое касается отката изменений - это не отмена последних команд, это не rollback силами операционной системы устройства - это приведение всей сети к новой (старой) версии.</p>
</div>
<div class="section" id="id7">
<h2>Мониторинг и самовосстановление сервисов</h2>
<div class="line-block">
<div class="line">Это самоочевидная задача в современных сетях выходит на новый уровень.</div>
<div class="line">Зачастую у больших сервис-провайдеров практикуется подход, что упавший сервис надо очень быстро добить и поднять новый, вместо того, чтобы разбираться, что произошло.</div>
<div class="line">«Очень» означает, что со всех сторон нужно обильно обмазаться мониторингами, которые в течение секунд обнаружат малейшие отклонения  от нормы.</div>
<div class="line">И здесь уже не достаточно привычных метрик, вроде загрузки интерфейса или доступности узла. Недостаточно и ручного слежения дежурного за ними.</div>
<div class="line">Для многих вещей вообще должен быть <a class="reference external" href="https://www.irisns.com/self-healing-network-tomorrow-look-like/">Self-Healing</a><span class="link-target"> [https://www.irisns.com/self-healing-network-tomorrow-look-like/]</span> - мониторинги зажглись красным и пошли сами подорожник приложили, где болит.</div>
</div>
<p>И здесь мы тоже мониторим не только отдельные устройства, но и здоровье сети целиком, причём как вайтбокс, что сравнительно понятно, так и блэкбокс, что уже сложнее.</p>
<hr class="docutils" />
<p>Что нам понадобится для реализации таких амбициозных планов?</p>
<ul class="simple">
<li><p>Иметь список всех устройств в сети, их расположение, роли, модели, версии ПО. (<em>kazan-leaf-1.lmu.net, Kazan, leaf, Juniper QFX 5120, R18.3</em>)</p></li>
<li><p>Иметь систему описания сетевых сервисов. (<em>IGP, BGP, L2/3VPN, Policy, ACL, NTP, SSH</em>)</p></li>
<li><p>Уметь инициализировать устройство. (<em>Hostname, Mgmt IP, Mgmt Route, Users, RSA-Keys, LLDP, NETCONF</em>)</p></li>
<li><p>Настраивать устройство и приводить конфигурацию к нужной (в том числе старой) версии.</p></li>
<li><p>Тестировать конфигурацию</p></li>
<li><p>Периодически проверять состояние всех устройств на предмет отхождения от актуального и сообщать кому следует. (<em>Ночью кто-то тихонько добавил правило в ACL</em>)</p></li>
<li><p>Следить за работоспособностью.</p></li>
</ul>
</div>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>